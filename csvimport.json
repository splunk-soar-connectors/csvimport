{
    "appid": "1b0e5665-faeb-4c8e-9fd3-8627cd90d530",
    "name": "CSV Import",
    "description": "Ingest CSV files into Phantom",
    "type": "information",
    "product_vendor": "Splunk",
    "logo": "logo_splunk.svg",
    "logo_dark": "logo_splunk_dark.svg",
    "product_name": "CSV Import",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2022 Splunk Inc.",
    "app_version": "1.0.2",
    "utctime_updated": "2022-01-21T17:44:02.000000Z",
    "package_name": "phantom_csvimport",
    "main_module": "csvimport_connector.py",
    "min_phantom_version": "5.0.0",
    "python_version": "3",
    "app_wizard_version": "1.0.0",
    "fips_compliant": true,
    "pip_dependencies": {
        "wheel": [
            {
                "module": "backports.functools_lru_cache",
                "input_file": "wheels/backports.functools_lru_cache-1.6.4-py2.py3-none-any.whl"
            },
            {
                "module": "beautifulsoup4",
                "input_file": "wheels/beautifulsoup4-4.9.1-py3-none-any.whl"
            },
            {
                "module": "certifi",
                "input_file": "wheels/certifi-2021.10.8-py2.py3-none-any.whl"
            },
            {
                "module": "chardet",
                "input_file": "wheels/chardet-3.0.4-py2.py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/idna-2.10-py2.py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/requests-2.25.0-py2.py3-none-any.whl"
            },
            {
                "module": "soupsieve",
                "input_file": "wheels/soupsieve-1.9.6-py2.py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/urllib3-1.26.7-py2.py3-none-any.whl"
            }
        ]
    },
    "configuration": {},
    "actions": [
        {
            "action": "ingest csv",
            "description": "Read contents of a CSV and create artifact",
            "type": "generic",
            "identifier": "ingest_csv",
            "read_only": true,
            "parameters": {
                "vault_id": {
                    "description": "The vault_id for the csv",
                    "data_type": "string",
                    "required": true,
                    "contains": [
                        "sha1",
                        "vault id"
                    ],
                    "order": 0,
                    "primary": true
                },
                "container_id": {
                    "description": "Create artifacts on given container ID",
                    "data_type": "numeric",
                    "required": true,
                    "order": 1
                },
                "cef_column_headers": {
                    "description": "Comma separated list of the CEF columns (e.g. ip,port,type,comment)",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "artifact_name": {
                    "description": "Name for the artifact (e.g. IP Artifact)",
                    "data_type": "string",
                    "required": true,
                    "order": 3
                },
                "artifact_label": {
                    "description": "Label for the artifact (e.g. IP_test)",
                    "data_type": "string",
                    "required": false,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.artifact_label",
                    "data_type": "string",
                    "example_values": [
                        "events"
                    ]
                },
                {
                    "data_path": "action_result.parameter.artifact_name",
                    "data_type": "string",
                    "example_values": [
                        "artifact"
                    ]
                },
                {
                    "data_path": "action_result.parameter.cef_column_headers",
                    "data_type": "string",
                    "example_values": [
                        "header_1",
                        "header_2"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "column_name": "Container ID",
                    "column_order": 1,
                    "example_values": [
                        123
                    ]
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "sha1",
                        "vault id"
                    ],
                    "column_name": "Vault ID",
                    "column_order": 0,
                    "example_values": [
                        "285ed37b6be7b4bf1583b59150b22e9a741caede"
                    ]
                },
                {
                    "data_path": "action_result.data.*.vault_id",
                    "data_type": "string",
                    "contains": [
                        "sha1",
                        "vault id"
                    ],
                    "example_values": [
                        "b90e6c7ab7f77d058efd444279b81c4c6a9cf4ce"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "csv from artifacts",
            "description": "Create the csv in the vault from the artifacts of container",
            "type": "generic",
            "identifier": "create_csv",
            "read_only": true,
            "parameters": {
                "container_id": {
                    "description": "The container_id for the artifacts",
                    "data_type": "numeric",
                    "required": true,
                    "order": 0
                },
                "limit": {
                    "description": "The number of artifacts to retrieve",
                    "data_type": "numeric",
                    "default": 1000,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 3,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "column_name": "Container ID",
                    "column_order": 0,
                    "example_values": [
                        123
                    ]
                },
                {
                    "data_path": "action_result.parameter.limit",
                    "data_type": "numeric",
                    "example_values": [
                        1000
                    ]
                },
                {
                    "data_path": "action_result.data.*.vault_id",
                    "data_type": "string",
                    "column_name": "Vault ID",
                    "column_order": 1,
                    "contains": [
                        "sha1",
                        "vault id"
                    ],
                    "example_values": [
                        "b90e6c7ab7f77d058efd444279b81c4c6a9cf4ce"
                    ]
                },
                {
                    "data_path": "action_result.data.*.file_name",
                    "data_type": "string",
                    "column_name": "File Name",
                    "column_order": 2,
                    "example_values": [
                        "test.csv"
                    ]
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}