{
    "appid": "1b0e5665-faeb-4c8e-9fd3-8627cd90d530",
    "name": "CSV Import",
    "description": "Ingest CSV files into Phantom",
    "type": "information",
    "product_vendor": "CSV",
    "logo": "csvimport.png",
    "logo_dark": "csvimport_dark.png",
    "product_name": "CSV",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2018-2021 Splunk Inc.",
    "app_version": "2.0.0",
    "utctime_updated": "2018-11-13T22:04:02.279194Z",
    "package_name": "phantom_csvimport",
    "main_module": "csvimport_connector.py",
    "min_phantom_version": "5.0.0",
    "python_version": "3",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "The Base URL for REST connections",
            "data_type": "string",
            "required": true,
            "default": "https://127.0.0.1",
            "order": 0
        },
        "auth_token": {
            "description": "Phantom user auth token",
            "data_type": "password",
            "required": true,
            "default": "",
            "order": 1
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "type": "test",
            "identifier": "test_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "ingest csv",
            "description": "Read contents of a CSV and create artifact",
            "type": "generic",
            "identifier": "ingest_csv",
            "read_only": true,
            "parameters": {
                "vault_id": {
                    "description": "The vault_id for the csv",
                    "data_type": "string",
                    "required": true,
                    "order": 0
                },
                "container_id": {
                    "description": "The container_id for the vault containing the csv",
                    "data_type": "numeric",
                    "required": true,
                    "order": 1
                },
                "cef_column_headers": {
                    "description": "Comma separated list of the CEF columns (e.g. ip,port,type,comment)",
                    "data_type": "string",
                    "required": true,
                    "order": 2
                },
                "artifact_name": {
                    "description": "Name for the artifact (e.g. IP Artifact)",
                    "data_type": "string",
                    "required": true,
                    "order": 3
                },
                "artifact_label": {
                    "description": "Label for the artifact (e.g. IP_test)",
                    "data_type": "string",
                    "required": false,
                    "order": 4
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.artifact_label",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.artifact_name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.cef_column_headers",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "column_name": "Container ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "column_name": "Vault ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "csv from artifacts",
            "description": "Given a container_id create a csv in the vault from all the container's artifacts.",
            "type": "generic",
            "identifier": "create_csv",
            "read_only": true,
            "parameters": {
                "container_id": {
                    "description": "The container_id for the artifacts",
                    "data_type": "numeric",
                    "required": true,
                    "order": 0
                },
                "page_size": {
                    "description": "The number of pages to retrieve.",
                    "data_type": "numeric",
                    "default": 1000,
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "column_name": "Container ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.page_size",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}
